{
  "contractName": "ExitNFT",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/ExitNFT.sol\":\"ExitNFT\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/arth/Documents/Projects/contracts/contracts/common/Registry.sol\":{\"keccak256\":\"0x90ac831440b6fbfff97d84c61172cfc523f15121b22b87d10f94b66e47541a79\",\"urls\":[\"bzz-raw://a9606e5be8cf3eb999ca2a3bb9f9fad0f0c80c2e2f356c95789beedb842ca0b5\",\"dweb:/ipfs/QmNiTSnxTwQacGbQPmYr2sdGgWwJk3GsE8nsifBuD3EFnN\"]},\"/Users/arth/Documents/Projects/contracts/contracts/common/governance/Governable.sol\":{\"keccak256\":\"0x38ecd54850256c7f03fd236d4fd95de3f2e307cb6f3fd843994d588e0f2fbc04\",\"urls\":[\"bzz-raw://5ce3e82b37ad1e5a5475355729bb731434bfc47a1b865c3589f666907b6b0b7b\",\"dweb:/ipfs/QmUMRzD27ab7gEecNwoUdZRMysxik9RduLqyym9nhLvevT\"]},\"/Users/arth/Documents/Projects/contracts/contracts/common/governance/IGovernance.sol\":{\"keccak256\":\"0x81b923a9b6ee8ee89a9741b5a74bc1318c5e570e09a66e20e26cb8850d76b367\",\"urls\":[\"bzz-raw://a634cba0419365bbbcb507ba519ea912e96ce0ad1369c736c5059ed3c86441a6\",\"dweb:/ipfs/QmTQSA3KNDo9yiZboXqNDSCSVbUshudqJNLMrXGcnxRJM3\"]},\"/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/ExitNFT.sol\":{\"keccak256\":\"0xe00a1c43e2912c074ac283ccf2b07dd3831bed37f0d820f04258fe8015d1bb1b\",\"urls\":[\"bzz-raw://bd7fb9cb81675f5062d6f4d34bd05cc553e0eeccdf618e67f4a51cf657d10e3d\",\"dweb:/ipfs/Qmb8eTyU5rSwRKquf7JT9iDQabNUqW5mGNnC11jasJWT9M\"]},\"/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/IWithdrawManager.sol\":{\"keccak256\":\"0xcf284a6c5fa2e5f6aa045ae18fe617bab6f4d82dc30dec5682c9d13190529449\",\"urls\":[\"bzz-raw://eac0c653215537db1e97263afeda269485c1daf5671dfa64fa92be205abdf623\",\"dweb:/ipfs/QmaWWvvxSbyAtPjhCMEXM8QACurs7Av8NMNevSuL8wFJaB\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzz-raw://b51463c381bc5ad8ad1c2a0b15bfbcab7810a35f0cd33e00a85c67d5526f97e8\",\"dweb:/ipfs/Qmb51F78kH7ifaW9CbkfZhprpkbY7T16gkarbscX6E7h2f\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd86c61f2e7e78c88716b5591bbf2d6cce8fe1a68320484994810d54f82605a7a\",\"urls\":[\"bzz-raw://aa27a9f095b9d061be9fb54082de2d76c89c127ae4e3bbf565fb3a6ddc3991a1\",\"dweb:/ipfs/QmRZaZ6czUGKAHTN3y9LokejfFCSwVPfVz6Vk6YrEuxeN7\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzz-raw://2fa424de1b3f2f31c57af99e87a0ec76e355bbf336f8db8f1238230a897c8bc8\",\"dweb:/ipfs/QmREEQFeAuyWQr27AfcvLG7qXYf6JiwZXxf5AmHT7on7cU\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzz-raw://d6ee2095166a8fc1dbaff1949d786b91b8ef8ce41a7b5801a81dd2453220e770\",\"dweb:/ipfs/QmYBLFvCr9zKndkP8e7nFoKuZGcQEQtbHdwttC1MqckCgv\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x07029cbf047f6559e30862f33be2ee323c763e2fc251bca5de44177d29cf15e2\",\"urls\":[\"bzz-raw://d898f3b89f15102cd113de447538b699de959bebd840149c2cdef9102dbbf73a\",\"dweb:/ipfs/QmTb4v4g9GZgdm2ksA7q2xc4EbyPxX3fsqUWU5Y2StN3RA\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x44fd7c58fc1323f8481f160f2fd4c34b1653d0cc5def45c2381898d32bcc023e\",\"urls\":[\"bzz-raw://6bf189ee544432d2323a6049361cb4695ae980d11c747d4e5afb3b08537b2424\",\"dweb:/ipfs/QmeBG5Jge1QGy6rUVMpaosbqbDdZAC8jefQEnx9unWSEfF\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzz-raw://3d69bbdaef9e7beb4919fed4f5aaca68cf3ecbf8f0932959fee720110daffaba\",\"dweb:/ipfs/QmdLwrPjDbhWBzkBMiRFbz3muLr5KQ5HQoiFk8EPkTMwRh\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzz-raw://95b3b4b5c8008b6d8a862a797bf2550e8017cbff25d0e36be86cff48b1a9bbf2\",\"dweb:/ipfs/QmZWK9sD6V3jwSarEyheM8PjHFVcuA11W65FgAZ2fsu9sq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610dc5380380610dc58339818101604052602081101561003357600080fd5b50516100677f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b036100be16565b6100997f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b036100be16565b600580546001600160a01b0319166001600160a01b039290921691909117905561012a565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100ed57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610c8c806101396000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806370a082311161006657806370a0823114610265578063a22cb4651461029d578063b88d4fde146102cb578063e985e9c514610391576100cf565b806342966c681461020e5780634f558e791461022b5780636352211e14610248576100cf565b806301ffc9a7146100d4578063081812fc1461010f578063095ea7b31461014857806323b872dd1461017657806340c10f19146101ac57806342842e0e146101d8575b600080fd5b6100fb600480360360208110156100ea57600080fd5b50356001600160e01b0319166103bf565b604080519115158252519081900360200190f35b61012c6004803603602081101561012557600080fd5b50356103de565b604080516001600160a01b039092168252519081900360200190f35b6101746004803603604081101561015e57600080fd5b506001600160a01b03813516906020013561040e565b005b6101746004803603606081101561018c57600080fd5b506001600160a01b038135811691602081013590911690604001356104bb565b610174600480360360408110156101c257600080fd5b506001600160a01b0381351690602001356104de565b610174600480360360608110156101ee57600080fd5b506001600160a01b038135811691602081013590911690604001356105ac565b6101746004803603602081101561022457600080fd5b50356105c7565b6100fb6004803603602081101561024157600080fd5b5035610693565b61012c6004803603602081101561025e57600080fd5b50356106a4565b61028b6004803603602081101561027b57600080fd5b50356001600160a01b03166106c6565b60408051918252519081900360200190f35b610174600480360360408110156102b357600080fd5b506001600160a01b03813516906020013515156106fc565b610174600480360360808110156102e157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561031c57600080fd5b82018360208201111561032e57600080fd5b8035906020019184600183028401116401000000008311171561035057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610780945050505050565b6100fb600480360360408110156103a757600080fd5b506001600160a01b03813581169160200135166107a6565b6001600160e01b03191660009081526020819052604090205460ff1690565b60006103e9826107d4565b6103f257600080fd5b506000908152600260205260409020546001600160a01b031690565b6000610419826106a4565b9050806001600160a01b0316836001600160a01b0316141561043a57600080fd5b336001600160a01b0382161480610456575061045681336107a6565b61045f57600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6104c533826107f1565b6104ce57600080fd5b6104d9838383610850565b505050565b600560009054906101000a90046001600160a01b03166001600160a01b031663930df82e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052c57600080fd5b505afa158015610540573d6000803e3d6000fd5b505050506040513d602081101561055657600080fd5b50516001600160a01b0316331461059e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c366022913960400191505060405180910390fd5b6105a88282610930565b5050565b6104d983838360405180602001604052806000815250610780565b600560009054906101000a90046001600160a01b03166001600160a01b031663930df82e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061557600080fd5b505afa158015610629573d6000803e3d6000fd5b505050506040513d602081101561063f57600080fd5b50516001600160a01b031633146106875760405162461bcd60e51b8152600401808060200182810382526022815260200180610c366022913960400191505060405180910390fd5b610690816109d1565b50565b600061069e826107d4565b92915050565b6000818152600160205260408120546001600160a01b03168061069e57600080fd5b60006001600160a01b0382166106db57600080fd5b6001600160a01b038216600090815260036020526040902061069e906109e3565b6001600160a01b03821633141561071257600080fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61078b8484846104bb565b610797848484846109e7565b6107a057600080fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107fd836106a4565b9050806001600160a01b0316846001600160a01b031614806108385750836001600160a01b031661082d846103de565b6001600160a01b0316145b80610848575061084881856107a6565b949350505050565b826001600160a01b0316610863826106a4565b6001600160a01b03161461087657600080fd5b6001600160a01b03821661088957600080fd5b61089281610b1a565b6001600160a01b03831660009081526003602052604090206108b390610b55565b6001600160a01b03821660009081526003602052604090206108d490610b6c565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661094357600080fd5b61094c816107d4565b1561095657600080fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061099590610b6c565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6106906109dd826106a4565b82610b75565b5490565b60006109fb846001600160a01b0316610c1a565b610a0757506001610848565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610a81578181015183820152602001610a69565b50505050905090810190601f168015610aae5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b6000818152600260205260409020546001600160a01b03161561069057600090815260026020526040902080546001600160a01b0319169055565b8054610b6890600163ffffffff610c2016565b9055565b80546001019055565b816001600160a01b0316610b88826106a4565b6001600160a01b031614610b9b57600080fd5b610ba481610b1a565b6001600160a01b0382166000908152600360205260409020610bc590610b55565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b3b151590565b600082821115610c2f57600080fd5b5090039056fe554e415554484f52495a45445f57495448445241575f4d414e414745525f4f4e4c59a265627a7a72315820cfcd62f12a651e46b65098b0841ed1c2fee959bf2f4d8c33d022a656e4b35e0064736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806370a082311161006657806370a0823114610265578063a22cb4651461029d578063b88d4fde146102cb578063e985e9c514610391576100cf565b806342966c681461020e5780634f558e791461022b5780636352211e14610248576100cf565b806301ffc9a7146100d4578063081812fc1461010f578063095ea7b31461014857806323b872dd1461017657806340c10f19146101ac57806342842e0e146101d8575b600080fd5b6100fb600480360360208110156100ea57600080fd5b50356001600160e01b0319166103bf565b604080519115158252519081900360200190f35b61012c6004803603602081101561012557600080fd5b50356103de565b604080516001600160a01b039092168252519081900360200190f35b6101746004803603604081101561015e57600080fd5b506001600160a01b03813516906020013561040e565b005b6101746004803603606081101561018c57600080fd5b506001600160a01b038135811691602081013590911690604001356104bb565b610174600480360360408110156101c257600080fd5b506001600160a01b0381351690602001356104de565b610174600480360360608110156101ee57600080fd5b506001600160a01b038135811691602081013590911690604001356105ac565b6101746004803603602081101561022457600080fd5b50356105c7565b6100fb6004803603602081101561024157600080fd5b5035610693565b61012c6004803603602081101561025e57600080fd5b50356106a4565b61028b6004803603602081101561027b57600080fd5b50356001600160a01b03166106c6565b60408051918252519081900360200190f35b610174600480360360408110156102b357600080fd5b506001600160a01b03813516906020013515156106fc565b610174600480360360808110156102e157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561031c57600080fd5b82018360208201111561032e57600080fd5b8035906020019184600183028401116401000000008311171561035057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610780945050505050565b6100fb600480360360408110156103a757600080fd5b506001600160a01b03813581169160200135166107a6565b6001600160e01b03191660009081526020819052604090205460ff1690565b60006103e9826107d4565b6103f257600080fd5b506000908152600260205260409020546001600160a01b031690565b6000610419826106a4565b9050806001600160a01b0316836001600160a01b0316141561043a57600080fd5b336001600160a01b0382161480610456575061045681336107a6565b61045f57600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6104c533826107f1565b6104ce57600080fd5b6104d9838383610850565b505050565b600560009054906101000a90046001600160a01b03166001600160a01b031663930df82e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052c57600080fd5b505afa158015610540573d6000803e3d6000fd5b505050506040513d602081101561055657600080fd5b50516001600160a01b0316331461059e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c366022913960400191505060405180910390fd5b6105a88282610930565b5050565b6104d983838360405180602001604052806000815250610780565b600560009054906101000a90046001600160a01b03166001600160a01b031663930df82e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061557600080fd5b505afa158015610629573d6000803e3d6000fd5b505050506040513d602081101561063f57600080fd5b50516001600160a01b031633146106875760405162461bcd60e51b8152600401808060200182810382526022815260200180610c366022913960400191505060405180910390fd5b610690816109d1565b50565b600061069e826107d4565b92915050565b6000818152600160205260408120546001600160a01b03168061069e57600080fd5b60006001600160a01b0382166106db57600080fd5b6001600160a01b038216600090815260036020526040902061069e906109e3565b6001600160a01b03821633141561071257600080fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61078b8484846104bb565b610797848484846109e7565b6107a057600080fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107fd836106a4565b9050806001600160a01b0316846001600160a01b031614806108385750836001600160a01b031661082d846103de565b6001600160a01b0316145b80610848575061084881856107a6565b949350505050565b826001600160a01b0316610863826106a4565b6001600160a01b03161461087657600080fd5b6001600160a01b03821661088957600080fd5b61089281610b1a565b6001600160a01b03831660009081526003602052604090206108b390610b55565b6001600160a01b03821660009081526003602052604090206108d490610b6c565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661094357600080fd5b61094c816107d4565b1561095657600080fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061099590610b6c565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6106906109dd826106a4565b82610b75565b5490565b60006109fb846001600160a01b0316610c1a565b610a0757506001610848565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610a81578181015183820152602001610a69565b50505050905090810190601f168015610aae5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b6000818152600260205260409020546001600160a01b03161561069057600090815260026020526040902080546001600160a01b0319169055565b8054610b6890600163ffffffff610c2016565b9055565b80546001019055565b816001600160a01b0316610b88826106a4565b6001600160a01b031614610b9b57600080fd5b610ba481610b1a565b6001600160a01b0382166000908152600360205260409020610bc590610b55565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b3b151590565b600082821115610c2f57600080fd5b5090039056fe554e415554484f52495a45445f57495448445241575f4d414e414745525f4f4e4c59a265627a7a72315820cfcd62f12a651e46b65098b0841ed1c2fee959bf2f4d8c33d022a656e4b35e0064736f6c634300050b0032",
  "sourceMap": "158:697:57:-;;;420:85;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:85:57;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;420:85:57;639:40:78;658:20;-1:-1:-1;;;;;639:18:78;:40;:::i;:::-;1970::87;1989:20;-1:-1:-1;;;;;1970:18:87;:40;:::i;:::-;468:8:57;:30;;-1:-1:-1;;;;;;468:30:57;-1:-1:-1;;;;;468:30:57;;;;;;;;;;158:697;;989:158:78;1064:25;;;;;;1056:34;;;;;;1100:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1100:40:78;1136:4;1100:40;;;989:158::o;158:697:57:-;;;;;;;",
  "deployedSourceMap": "158:697:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:697:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:78;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:78;-1:-1:-1;;;;;;777:133:78;;:::i;:::-;;;;;;;;;;;;;;;;;;3773:151:87;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:151:87;;:::i;:::-;;;;-1:-1:-1;;;;;3773:151:87;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3196:292:87;;;;;;;;:::i;:::-;;5329:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5329:180:87;;;;;;;;;;;;;;;;;:::i;511:137:57:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;511:137:57;;;;;;;;:::i;6142:132:87:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6142:132:87;;;;;;;;;;;;;;;;;:::i;654:93:57:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;654:93:57;;:::i;753:100::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;753:100:57;;:::i;2598:177:87:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2598:177:87;;:::i;2220:160::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2220:160:87;-1:-1:-1;;;;;2220:160:87;;:::i;:::-;;;;;;;;;;;;;;;;4216:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4216:213:87;;;;;;;;;;:::i;6979:211::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6979:211:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6979:211:87;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:87;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6979:211:87;;-1:-1:-1;6979:211:87;;-1:-1:-1;;;;;6979:211:87:i;4750:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4750:145:87;;;;;;;;;;:::i;777:133:78:-;-1:-1:-1;;;;;;870:33:78;847:4;870:33;;;;;;;;;;;;;;777:133::o;3773:151:87:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;-1:-1:-1;3893:24:87;;;;:15;:24;;;;;;-1:-1:-1;;;;;3893:24:87;;3773:151::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;;3315:5;-1:-1:-1;;;;;3309:11:87;:2;-1:-1:-1;;;;;3309:11:87;;;3301:20;;;;;;3339:10;-1:-1:-1;;;;;3339:19:87;;;;:58;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3331:67;;;;;;3409:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3409:29:87;-1:-1:-1;;;;;3409:29:87;;;;;;;;;3453:28;;3409:24;;3453:28;;;;;;;3196:292;;;:::o;5329:180::-;5419:39;5438:10;5450:7;5419:18;:39::i;:::-;5411:48;;;;;;5470:32;5484:4;5490:2;5494:7;5470:13;:32::i;:::-;5329:180;;;:::o;511:137:57:-;300:8;;;;;;;;;-1:-1:-1;;;;;300:8:57;-1:-1:-1;;;;;300:34:57;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;300:36:57;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;300:36:57;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;300:36:57;-1:-1:-1;;;;;286:50:57;:10;:50;265:131;;;;-1:-1:-1;;;265:131:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:23;624:6;632:8;618:5;:23::i;:::-;511:137;;:::o;6142:132:87:-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;:16;:39::i;654:93:57:-;300:8;;;;;;;;;-1:-1:-1;;;;;300:8:57;-1:-1:-1;;;;;300:34:57;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;300:36:57;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;300:36:57;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;300:36:57;-1:-1:-1;;;;;286:50:57;:10;:50;265:131;;;;-1:-1:-1;;;265:131:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:15;731:8;725:5;:15::i;:::-;654:93;:::o;753:100::-;807:4;830:16;838:7;830;:16::i;:::-;823:23;753:100;-1:-1:-1;;753:100:57:o;2598:177:87:-;2653:7;2688:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2688:20:87;2726:19;2718:28;;;;;2220:160;2275:7;-1:-1:-1;;;;;2302:19:87;;2294:28;;;;;;-1:-1:-1;;;;;2339:24:87;;;;;;:17;:24;;;;;:34;;:32;:34::i;4216:213::-;-1:-1:-1;;;;;4295:16:87;;4301:10;4295:16;;4287:25;;;;;;4341:10;4322:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4322:34:87;;;;;;;;;;;;:45;;-1:-1:-1;;4322:45:87;;;;;;;;;;4382:40;;;;;;;4322:34;;4341:10;4382:40;;;;;;;;;;;4216:213;;:::o;6979:211::-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;6979:211;;;;:::o;4750:145::-;-1:-1:-1;;;;;4853:25:87;;;4830:4;4853:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4750:145::o;7384:152::-;7441:4;7473:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7473:20:87;7510:19;;;7384:152::o;7896:246::-;7981:4;7997:13;8013:16;8021:7;8013;:16::i;:::-;7997:32;;8058:5;-1:-1:-1;;;;;8047:16:87;:7;-1:-1:-1;;;;;8047:16:87;;:51;;;;8091:7;-1:-1:-1;;;;;8067:31:87;:20;8079:7;8067:11;:20::i;:::-;-1:-1:-1;;;;;8067:31:87;;8047:51;:87;;;;8102:32;8119:5;8126:7;8102:16;:32::i;:::-;8039:96;7896:246;-1:-1:-1;;;;7896:246:87:o;9844:362::-;9957:4;-1:-1:-1;;;;;9937:24:87;:16;9945:7;9937;:16::i;:::-;-1:-1:-1;;;;;9937:24:87;;9929:33;;;;;;-1:-1:-1;;;;;9980:16:87;;9972:25;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;-1:-1:-1;;;;;10042:23:87;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10087:21:87;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10131:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;10131:25:87;-1:-1:-1;;;;;10131:25:87;;;;;;;;;10172:27;;10131:20;;10172:27;;;;;;;9844:362;;;:::o;8385:259::-;-1:-1:-1;;;;;8456:16:87;;8448:25;;;;;;8492:16;8500:7;8492;:16::i;:::-;8491:17;8483:26;;;;;;8520:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8520:25:87;-1:-1:-1;;;;;8520:25:87;;;;;;;;8555:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8604;;8629:7;;-1:-1:-1;;;;;8604:33:87;;;8621:1;;8604:33;;8621:1;;8604:33;8385:259;;:::o;9379:90::-;9430:32;9436:16;9444:7;9436;:16::i;:::-;9454:7;9430:5;:32::i;1062:112:77:-;1153:14;;1062:112::o;10734:347:87:-;10855:4;10880:15;:2;-1:-1:-1;;;;;10880:13:87;;:15::i;:::-;10875:58;;-1:-1:-1;10918:4:87;10911:11;;10875:58;10959:70;;-1:-1:-1;;;10959:70:87;;10996:10;10959:70;;;;;;-1:-1:-1;;;;;10959:70:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:13;;10959:36;;;;;;10996:10;;11008:4;;11014:7;;11023:5;;10959:70;;;;;;;;;;;10943:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10959:70:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:87;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:87;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10959:70:87;-1:-1:-1;;;;;;11047:26:87;-1:-1:-1;;;11047:26:87;;-1:-1:-1;;10734:347:87;;;;;;:::o;11242:171::-;11341:1;11305:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11305:24:87;:38;11301:106;;11394:1;11359:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11359:37:87;;;11242:171::o;1275:108:77:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1180:89::-;1243:19;;1261:1;1243:19;;;1180:89::o;8917:283:87:-;9011:5;-1:-1:-1;;;;;8991:25:87;:16;8999:7;8991;:16::i;:::-;-1:-1:-1;;;;;8991:25:87;;8983:34;;;;;;9028:23;9043:7;9028:14;:23::i;:::-;-1:-1:-1;;;;;9062:24:87;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;9139:1;9108:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;9108:33:87;;;9157:36;9120:7;;9139:1;-1:-1:-1;;;;;9157:36:87;;;;;9139:1;;9157:36;8917:283;;:::o;463:616:97:-;1026:20;1064:8;;;463:616::o;1211:145:81:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:81;;;1211:145::o",
  "source": "pragma solidity ^0.5.2;\n\nimport {ERC721} from \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\nimport {Registry} from \"../../common/Registry.sol\";\n\ncontract ExitNFT is ERC721 {\n    Registry internal registry;\n\n    modifier onlyWithdrawManager() {\n        require(\n            msg.sender == registry.getWithdrawManagerAddress(),\n            \"UNAUTHORIZED_WITHDRAW_MANAGER_ONLY\"\n        );\n        _;\n    }\n\n    constructor(address _registry) public {\n        registry = Registry(_registry);\n    }\n\n    function mint(address _owner, uint256 _tokenId)\n        external\n        onlyWithdrawManager\n    {\n        _mint(_owner, _tokenId);\n    }\n\n    function burn(uint256 _tokenId) external onlyWithdrawManager {\n        _burn(_tokenId);\n    }\n\n    function exists(uint256 tokenId) public view returns (bool) {\n        return _exists(tokenId);\n    }\n}\n",
  "sourcePath": "/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/ExitNFT.sol",
  "ast": {
    "absolutePath": "/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/ExitNFT.sol",
    "exportedSymbols": {
      "ExitNFT": [
        12244
      ]
    },
    "id": 12245,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12170,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 12172,
        "nodeType": "ImportDirective",
        "scope": 12245,
        "sourceUnit": 20056,
        "src": "25:79:57",
        "symbolAliases": [
          {
            "foreign": 12171,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/arth/Documents/Projects/contracts/contracts/common/Registry.sol",
        "file": "../../common/Registry.sol",
        "id": 12174,
        "nodeType": "ImportDirective",
        "scope": 12245,
        "sourceUnit": 2555,
        "src": "105:51:57",
        "symbolAliases": [
          {
            "foreign": 12173,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12175,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20055,
              "src": "178:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$20055",
                "typeString": "contract ERC721"
              }
            },
            "id": 12176,
            "nodeType": "InheritanceSpecifier",
            "src": "178:6:57"
          }
        ],
        "contractDependencies": [
          18656,
          18666,
          20055,
          20709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12244,
        "linearizedBaseContracts": [
          12244,
          20055,
          20709,
          18656,
          18666
        ],
        "name": "ExitNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12178,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 12244,
            "src": "191:26:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$2554",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 12177,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2554,
              "src": "191:8:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$2554",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12191,
              "nodeType": "Block",
              "src": "255:159:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21510,
                            "src": "286:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "286:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12183,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "300:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Registry_$2554",
                                "typeString": "contract Registry"
                              }
                            },
                            "id": 12184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawManagerAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2458,
                            "src": "300:34:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 12185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "300:36:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "286:50:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "554e415554484f52495a45445f57495448445241575f4d414e414745525f4f4e4c59",
                        "id": 12187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "350:36:57",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1feea39c19c9659f5c180d0e604281f96749ee190f4fbaf76b1b2171c816ba34",
                          "typeString": "literal_string \"UNAUTHORIZED_WITHDRAW_MANAGER_ONLY\""
                        },
                        "value": "UNAUTHORIZED_WITHDRAW_MANAGER_ONLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1feea39c19c9659f5c180d0e604281f96749ee190f4fbaf76b1b2171c816ba34",
                          "typeString": "literal_string \"UNAUTHORIZED_WITHDRAW_MANAGER_ONLY\""
                        }
                      ],
                      "id": 12180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21513,
                        21514
                      ],
                      "referencedDeclaration": 21514,
                      "src": "265:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "265:131:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12189,
                  "nodeType": "ExpressionStatement",
                  "src": "265:131:57"
                },
                {
                  "id": 12190,
                  "nodeType": "PlaceholderStatement",
                  "src": "406:1:57"
                }
              ]
            },
            "documentation": null,
            "id": 12192,
            "name": "onlyWithdrawManager",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:57"
            },
            "src": "224:190:57",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12203,
              "nodeType": "Block",
              "src": "458:47:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12197,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12178,
                      "src": "468:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$2554",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12199,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12194,
                          "src": "488:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12198,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "479:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$2554_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 12200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "479:19:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$2554",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "468:30:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$2554",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 12202,
                  "nodeType": "ExpressionStatement",
                  "src": "468:30:57"
                }
              ]
            },
            "documentation": null,
            "id": 12204,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12194,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 12204,
                  "src": "432:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:19:57"
            },
            "returnParameters": {
              "id": 12196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:57"
            },
            "scope": 12244,
            "src": "420:85:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12218,
              "nodeType": "Block",
              "src": "608:40:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12214,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12206,
                        "src": "624:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12215,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "632:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12213,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19882,
                      "src": "618:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:23:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12217,
                  "nodeType": "ExpressionStatement",
                  "src": "618:23:57"
                }
              ]
            },
            "documentation": null,
            "id": 12219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12210,
                  "name": "onlyWithdrawManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12192,
                  "src": "584:19:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "584:19:57"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12206,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12219,
                  "src": "525:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12208,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12219,
                  "src": "541:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:34:57"
            },
            "returnParameters": {
              "id": 12212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:0:57"
            },
            "scope": 12244,
            "src": "511:137:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12230,
              "nodeType": "Block",
              "src": "715:32:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12227,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12221,
                        "src": "731:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12226,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19924,
                        19937
                      ],
                      "referencedDeclaration": 19937,
                      "src": "725:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 12228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12229,
                  "nodeType": "ExpressionStatement",
                  "src": "725:15:57"
                }
              ]
            },
            "documentation": null,
            "id": 12231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12223,
                  "name": "onlyWithdrawManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12192,
                  "src": "695:19:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "695:19:57"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12221,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12231,
                  "src": "668:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:18:57"
            },
            "returnParameters": {
              "id": 12225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:57"
            },
            "scope": 12244,
            "src": "654:93:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12242,
              "nodeType": "Block",
              "src": "813:40:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12239,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12233,
                        "src": "838:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12238,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19807,
                      "src": "830:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 12240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:16:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12237,
                  "id": 12241,
                  "nodeType": "Return",
                  "src": "823:23:57"
                }
              ]
            },
            "documentation": null,
            "id": 12243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12233,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "769:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:17:57"
            },
            "returnParameters": {
              "id": 12237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "807:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12235,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:6:57"
            },
            "scope": 12244,
            "src": "753:100:57",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12245,
        "src": "158:697:57"
      }
    ],
    "src": "0:856:57"
  },
  "legacyAST": {
    "absolutePath": "/Users/arth/Documents/Projects/contracts/contracts/root/withdrawManager/ExitNFT.sol",
    "exportedSymbols": {
      "ExitNFT": [
        12244
      ]
    },
    "id": 12245,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12170,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 12172,
        "nodeType": "ImportDirective",
        "scope": 12245,
        "sourceUnit": 20056,
        "src": "25:79:57",
        "symbolAliases": [
          {
            "foreign": 12171,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/arth/Documents/Projects/contracts/contracts/common/Registry.sol",
        "file": "../../common/Registry.sol",
        "id": 12174,
        "nodeType": "ImportDirective",
        "scope": 12245,
        "sourceUnit": 2555,
        "src": "105:51:57",
        "symbolAliases": [
          {
            "foreign": 12173,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12175,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20055,
              "src": "178:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$20055",
                "typeString": "contract ERC721"
              }
            },
            "id": 12176,
            "nodeType": "InheritanceSpecifier",
            "src": "178:6:57"
          }
        ],
        "contractDependencies": [
          18656,
          18666,
          20055,
          20709
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12244,
        "linearizedBaseContracts": [
          12244,
          20055,
          20709,
          18656,
          18666
        ],
        "name": "ExitNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12178,
            "name": "registry",
            "nodeType": "VariableDeclaration",
            "scope": 12244,
            "src": "191:26:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Registry_$2554",
              "typeString": "contract Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 12177,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2554,
              "src": "191:8:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$2554",
                "typeString": "contract Registry"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12191,
              "nodeType": "Block",
              "src": "255:159:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21510,
                            "src": "286:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "286:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12183,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "300:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Registry_$2554",
                                "typeString": "contract Registry"
                              }
                            },
                            "id": 12184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getWithdrawManagerAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2458,
                            "src": "300:34:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 12185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "300:36:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "286:50:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "554e415554484f52495a45445f57495448445241575f4d414e414745525f4f4e4c59",
                        "id": 12187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "350:36:57",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1feea39c19c9659f5c180d0e604281f96749ee190f4fbaf76b1b2171c816ba34",
                          "typeString": "literal_string \"UNAUTHORIZED_WITHDRAW_MANAGER_ONLY\""
                        },
                        "value": "UNAUTHORIZED_WITHDRAW_MANAGER_ONLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1feea39c19c9659f5c180d0e604281f96749ee190f4fbaf76b1b2171c816ba34",
                          "typeString": "literal_string \"UNAUTHORIZED_WITHDRAW_MANAGER_ONLY\""
                        }
                      ],
                      "id": 12180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21513,
                        21514
                      ],
                      "referencedDeclaration": 21514,
                      "src": "265:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "265:131:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12189,
                  "nodeType": "ExpressionStatement",
                  "src": "265:131:57"
                },
                {
                  "id": 12190,
                  "nodeType": "PlaceholderStatement",
                  "src": "406:1:57"
                }
              ]
            },
            "documentation": null,
            "id": 12192,
            "name": "onlyWithdrawManager",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:57"
            },
            "src": "224:190:57",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12203,
              "nodeType": "Block",
              "src": "458:47:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12197,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12178,
                      "src": "468:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$2554",
                        "typeString": "contract Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12199,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12194,
                          "src": "488:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12198,
                        "name": "Registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "479:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Registry_$2554_$",
                          "typeString": "type(contract Registry)"
                        }
                      },
                      "id": 12200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "479:19:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Registry_$2554",
                        "typeString": "contract Registry"
                      }
                    },
                    "src": "468:30:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Registry_$2554",
                      "typeString": "contract Registry"
                    }
                  },
                  "id": 12202,
                  "nodeType": "ExpressionStatement",
                  "src": "468:30:57"
                }
              ]
            },
            "documentation": null,
            "id": 12204,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12194,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 12204,
                  "src": "432:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:19:57"
            },
            "returnParameters": {
              "id": 12196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:57"
            },
            "scope": 12244,
            "src": "420:85:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12218,
              "nodeType": "Block",
              "src": "608:40:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12214,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12206,
                        "src": "624:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12215,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12208,
                        "src": "632:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12213,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19882,
                      "src": "618:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:23:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12217,
                  "nodeType": "ExpressionStatement",
                  "src": "618:23:57"
                }
              ]
            },
            "documentation": null,
            "id": 12219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12210,
                  "name": "onlyWithdrawManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12192,
                  "src": "584:19:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "584:19:57"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12206,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 12219,
                  "src": "525:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12208,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12219,
                  "src": "541:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:34:57"
            },
            "returnParameters": {
              "id": 12212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:0:57"
            },
            "scope": 12244,
            "src": "511:137:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12230,
              "nodeType": "Block",
              "src": "715:32:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12227,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12221,
                        "src": "731:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12226,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19924,
                        19937
                      ],
                      "referencedDeclaration": 19937,
                      "src": "725:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 12228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "725:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12229,
                  "nodeType": "ExpressionStatement",
                  "src": "725:15:57"
                }
              ]
            },
            "documentation": null,
            "id": 12231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12223,
                  "name": "onlyWithdrawManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12192,
                  "src": "695:19:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "695:19:57"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12221,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12231,
                  "src": "668:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:18:57"
            },
            "returnParameters": {
              "id": 12225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:0:57"
            },
            "scope": 12244,
            "src": "654:93:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12242,
              "nodeType": "Block",
              "src": "813:40:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12239,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12233,
                        "src": "838:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12238,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19807,
                      "src": "830:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 12240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:16:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12237,
                  "id": 12241,
                  "nodeType": "Return",
                  "src": "823:23:57"
                }
              ]
            },
            "documentation": null,
            "id": 12243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12233,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "769:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:17:57"
            },
            "returnParameters": {
              "id": 12237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12243,
                  "src": "807:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12235,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:6:57"
            },
            "scope": 12244,
            "src": "753:100:57",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12245,
        "src": "158:697:57"
      }
    ],
    "src": "0:856:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.14",
  "updatedAt": "2020-02-20T10:11:00.436Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}