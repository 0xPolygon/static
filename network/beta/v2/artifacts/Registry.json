{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "predicates",
      "outputs": [
        {
          "internalType": "enum Registry.Type",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "childToRootToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc20Predicate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proofValidatorContracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc721Predicate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isERC721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rootToChildToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "rootToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "childToken",
          "type": "address"
        }
      ],
      "name": "TokenMapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "ProofValidatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "ProofValidatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "PredicateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "PredicateRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractMapUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "updateContractMap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_rootToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_childToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isERC721",
          "type": "bool"
        }
      ],
      "name": "mapToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "addProofValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        }
      ],
      "name": "addErc20Predicate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        }
      ],
      "name": "addErc721Predicate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        },
        {
          "internalType": "enum Registry.Type",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "addPredicate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "predicate",
          "type": "address"
        }
      ],
      "name": "removePredicate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        }
      ],
      "name": "removeProofValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDelegationManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWethTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDepositManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStakeManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSlashingManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWithdrawManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getChildChainAndStateSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenMapped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenMappedAndIsErc721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isTokenMappedAndGetPredicate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "childToken",
          "type": "address"
        }
      ],
      "name": "isChildTokenErc721",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMappedAndIsErc721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"removePredicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDepositManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateContractMap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDelegationManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStakeManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"addErc20Predicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"predicates\",\"outputs\":[{\"internalType\":\"enum Registry.Type\",\"name\":\"_type\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"internalType\":\"enum Registry.Type\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"addPredicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"removeProofValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMappedAndGetPredicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenMapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChildChainAndStateSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"childToRootToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWethTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWithdrawManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc20Predicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"childToken\",\"type\":\"address\"}],\"name\":\"isChildTokenErc721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proofValidatorContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc721Predicate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"}],\"name\":\"addErc721Predicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"name\":\"addProofValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSlashingManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_childToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isERC721\",\"type\":\"bool\"}],\"name\":\"mapToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rootToChildToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rootToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"childToken\",\"type\":\"address\"}],\"name\":\"TokenMapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ProofValidatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ProofValidatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PredicateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"predicate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PredicateRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractMapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mapToken(address,address,bool)\":{\"details\":\"Map root token to child token\",\"params\":{\"_childToken\":\"Token address on the child chain\",\"_isERC721\":\"Is the token being mapped ERC721\",\"_rootToken\":\"Token address on the root chain\"}},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/angela/matic/contracts/contracts/common/Registry.sol\":\"Registry\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/angela/matic/contracts/contracts/common/Registry.sol\":{\"keccak256\":\"0x30ea66346649b9e1f5264290f67e2619e6fb058f3f25a3b4ae9803023a4cdd67\",\"urls\":[\"bzz-raw://adf1d4709d548ed9f9d7873ff453fc7d3e2668364d646c9b2366ba91312a2f5c\",\"dweb:/ipfs/QmadVUhC1npw8BXgcxA1gGPbuAdVov4d5sXW4dBRo2a9C8\"]},\"/Users/angela/matic/contracts/contracts/root/withdrawManager/IWithdrawManager.sol\":{\"keccak256\":\"0x934dbb0fcfe8b19019fe3829aca9bd7bcf02d928ff0d12ebb29c391f3bd926a7\",\"urls\":[\"bzz-raw://da429a9c82382c35c335c530adea1904ab582b3e95d3fc96c509c8c37caa1375\",\"dweb:/ipfs/QmXo1XjTW2apcKBkFsibzsD9ytvWnd5NLuBYM6sMAJoyaB\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzz-raw://e7de373f0bd92068fa1173a1bc2f65e80fdc4d929a339796636f65d6ef901005\",\"dweb:/ipfs/Qme26FWF1Ea8f7snvRo1Q3x6JkqHqoWVqYif3qzDGE8JEC\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80638b9c948911610104578063c881560f116100a2578063daa09e5411610071578063daa09e54146104de578063e117694b14610504578063ea60c7c41461053c578063f2fde38b14610562576101da565b8063c881560f14610482578063ce2611861461048a578063d060828b146104b0578063d580b418146104d6576101da565b8063930df82e116100de578063930df82e14610426578063b68649761461042e578063bbfe7cd314610436578063c4b875d31461045c576101da565b80638b9c94891461040e5780638da5cb5b146104165780638f32d59b1461041e576101da565b806337b1d5851161017c5780636416c1831161014b5780636416c1831461038c578063648b8178146103b25780636e86b770146103e0578063715018a614610406576101da565b806337b1d585146102c75780633af395e514610311578063609dc55a14610340578063627942da14610366576101da565b80632026cfdc116101b85780632026cfdc14610265578063253006b114610291578063287be3e4146102995780632d4e1dc7146102a1576101da565b806301f07db5146101df57806305f20595146102195780630c9effd014610241575b600080fd5b610205600480360360208110156101f557600080fd5b50356001600160a01b0316610588565b604080519115158252519081900360200190f35b61023f6004803603602081101561022f57600080fd5b50356001600160a01b03166105fa565b005b610249610656565b604080516001600160a01b039092168252519081900360200190f35b61023f6004803603604081101561027b57600080fd5b50803590602001356001600160a01b0316610691565b610249610717565b610249610755565b61023f600480360360208110156102b757600080fd5b50356001600160a01b031661078e565b6102ed600480360360208110156102dd57600080fd5b50356001600160a01b03166107c8565b604051808260038111156102fd57fe5b60ff16815260200191505060405180910390f35b61023f6004803603604081101561032757600080fd5b5080356001600160a01b0316906020013560ff166107dd565b61023f6004803603602081101561035657600080fd5b50356001600160a01b03166108d5565b6102496004803603602081101561037c57600080fd5b50356001600160a01b0316610967565b610205600480360360208110156103a257600080fd5b50356001600160a01b031661099a565b6103ba6109ba565b604080516001600160a01b03938416815291909216602082015281519081900390910190f35b610249600480360360208110156103f657600080fd5b50356001600160a01b0316610a1f565b61023f610a3a565b610249610a95565b610249610acb565b610205610ada565b610249610aeb565b610249610b27565b6102056004803603602081101561044c57600080fd5b50356001600160a01b0316610b36565b6102056004803603602081101561047257600080fd5b50356001600160a01b0316610bc6565b610249610bdb565b61023f600480360360208110156104a057600080fd5b50356001600160a01b0316610bea565b61023f600480360360208110156104c657600080fd5b50356001600160a01b0316610c21565b610249610ccb565b610205600480360360208110156104f457600080fd5b50356001600160a01b0316610d07565b61023f6004803603606081101561051a57600080fd5b506001600160a01b038135811691602081013590911690604001351515610d1c565b6102496004803603602081101561055257600080fd5b50356001600160a01b0316610eae565b61023f6004803603602081101561057857600080fd5b50356001600160a01b0316610ec9565b60006105938261099a565b6105d7576040805162461bcd60e51b815260206004820152601060248201526f1513d2d15397d393d517d3505414115160821b604482015290519081900360640190fd5b506001600160a01b03811660009081526007602052604090205460ff165b919050565b610602610ada565b61060b57600080fd5b6001600160a01b038116600081815260086020526040808220805460ff19169055513392917fd8b3c0235cefc5e19393dedb56c1ece6b41447ef932d7c6b34eb150a4b5d5f4991a350565b604080516d3232b837b9b4ba26b0b730b3b2b960911b8152815190819003600e0190206000908152600360205220546001600160a01b031690565b610699610ada565b6106a257600080fd5b6000828152600360205260408082205490516001600160a01b038085169392169185917fffb8cfd9cecbede837eec100fb8e17560ea22bf018e065366ee5e2ff5e0bd10c9190a460009182526003602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b60408051703232b632b3b0ba34b7b726b0b730b3b2b960791b815281519081900360110190206000908152600360205220546001600160a01b031690565b604080516b39ba30b5b2a6b0b730b3b2b960a11b8152815190819003600c0190206000908152600360205220546001600160a01b031690565b610796610ada565b61079f57600080fd5b600180546001600160a01b0319166001600160a01b0383161781556107c59082906107dd565b50565b60086020526000908152604090205460ff1681565b6107e5610ada565b6107ee57600080fd5b6001600160a01b03821660009081526008602052604081205460ff16600381111561081557fe5b14610867576040805162461bcd60e51b815260206004820152601760248201527f50726564696361746520616c7265616479206164646564000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000908152600860205260409020805482919060ff1916600183600381111561089657fe5b021790555060405133906001600160a01b038416907f0ea727f9bef04eb9a0e0da4d8fbb5b5319ddac03834baded53f84e0dcdddfedf90600090a35050565b6108dd610ada565b6108e657600080fd5b6001600160a01b03811660009081526006602052604090205460ff16151560011461091057600080fd5b60405133906001600160a01b038316907f96bedef125d36a85bf369db1f6ac9d7487d9daf6d4c22539249f1bf94a11e11990600090a36001600160a01b03166000908152600660205260409020805460ff19169055565b600061097282610588565b1561098957506002546001600160a01b03166105f5565b50506001546001600160a01b031690565b6001600160a01b0390811660009081526004602052604090205416151590565b604080516931b434b63221b430b4b760b11b8152815190819003600a018120600090815260036020818152848320546a39ba30ba32a9b2b73232b960a91b8552855194859003600b0190942083525291909120546001600160a01b0391821691169091565b6005602052600090815260409020546001600160a01b031681565b610a42610ada565b610a4b57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60408051683bb2ba342a37b5b2b760b91b815281519081900360090190206000908152600360205220546001600160a01b031690565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b604080516e3bb4ba34323930bba6b0b730b3b2b960891b8152815190819003600f0190206000908152600360205220546001600160a01b031690565b6001546001600160a01b031681565b6001600160a01b0380821660009081526005602052604081205490911680610ba5576040805162461bcd60e51b815260206004820152601960248201527f4368696c6420746f6b656e206973206e6f74206d617070656400000000000000604482015290519081900360640190fd5b6001600160a01b031660009081526007602052604090205460ff1692915050565b60066020526000908152604090205460ff1681565b6002546001600160a01b031681565b610bf2610ada565b610bfb57600080fd5b600280546001600160a01b0319166001600160a01b0383161781556107c59082906107dd565b610c29610ada565b610c3257600080fd5b6001600160a01b03811615801590610c6857506001600160a01b03811660009081526006602052604090205460ff161515600114155b610c7157600080fd5b60405133906001600160a01b038316907f3dc12d30280bcd33917d2b84141129635923441ba7e6b388b946b41f5ace697d90600090a36001600160a01b03166000908152600660205260409020805460ff19166001179055565b604080516e39b630b9b434b733a6b0b730b3b2b960891b8152815190819003600f0190206000908152600360205220546001600160a01b031690565b60076020526000908152604090205460ff1681565b610d24610ada565b610d2d57600080fd5b6001600160a01b03831615801590610d4d57506001600160a01b03821615155b610d96576040805162461bcd60e51b8152602060048201526015602482015274494e56414c49445f544f4b454e5f4144445245535360581b604482015290519081900360640190fd5b6001600160a01b0380841660008181526004602081815260408084208054878a166001600160a01b031991821681179092559085526005835281852080549091168617905584845260078252808420805488151560ff1990911617905580516e3bb4ba34323930bba6b0b730b3b2b960891b8152815190819003600f0181208552600390925280842054639145e6df60e01b8352928201949094529251931692639145e6df92602480820193929182900301818387803b158015610e5957600080fd5b505af1158015610e6d573d6000803e3d6000fd5b50506040516001600160a01b038086169350861691507f85920d35e6c72f6b2affffa04298b0cecfeba86e4a9f407df661f1cb8ab5e61790600090a3505050565b6004602052600090815260409020546001600160a01b031681565b610ed1610ada565b610eda57600080fd5b6107c5816001600160a01b038116610ef157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a7231582077970ac0cbb6e2a685922c9c635724e29b2c44d1d722bca6353d86021def85a964736f6c634300050b0032",
  "sourceMap": "188:5430:15:-;;;;;515:6:73;:19;;-1:-1:-1;;;;;;515:19:73;524:10;515:19;;;;-1:-1:-1;;;;;582:6:73;;549:40;;515:6;;549:40;188:5430:15;;;;;;",
  "deployedSourceMap": "188:5430:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:5430:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5011:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5011:167:15;-1:-1:-1;;;;;5011:167:15;;:::i;:::-;;;;;;;;;;;;;;;;;;3651:152;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3651:152:15;-1:-1:-1;;;;;3651:152:15;;:::i;:::-;;4271:111;;;:::i;:::-;;;;-1:-1:-1;;;;;4271:111:15;;;;;;;;;;;;;;1938:191;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1938:191:15;;;;;;-1:-1:-1;;;;;1938:191:15;;:::i;4045:117::-;;;:::i;4386:107::-;;;:::i;3103:141::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3103:141:15;-1:-1:-1;;;;;3103:141:15;;:::i;1378:47::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1378:47:15;-1:-1:-1;;;;;1378:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3396:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3396:251:15;;-1:-1:-1;;;;;3396:251:15;;;;;;;;:::i;3807:234::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3807:234:15;-1:-1:-1;;;;;3807:234:15;;:::i;5182:196::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5182:196:15;-1:-1:-1;;;;;5182:196:15;;:::i;4883:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4883:124:15;-1:-1:-1;;;;;4883:124:15;;:::i;4731:148::-;;;:::i;:::-;;;;-1:-1:-1;;;;;4731:148:15;;;;;;;;;;;;;;;;;;;;;;;;992:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;992:51:15;-1:-1:-1;;;;;992:51:15;;:::i;1423:137:73:-;;;:::i;4166:101:15:-;;;:::i;659:77:73:-;;;:::i;979:90::-;;;:::i;4614:113:15:-;;;:::i;826:29::-;;;:::i;5382:234::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5382:234:15;-1:-1:-1;;;;;5382:234:15;;:::i;1186:55::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1186:55:15;-1:-1:-1;;;;;1186:55:15;;:::i;859:30::-;;;:::i;3248:144::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3248:144:15;-1:-1:-1;;;;;3248:144:15;;:::i;2842:257::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2842:257:15;-1:-1:-1;;;;;2842:257:15;;:::i;4497:113::-;;;:::i;1245:40::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1245:40:15;-1:-1:-1;;;;;1245:40:15;;:::i;2352:486::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2352:486:15;;;;;;;;;;;;;;;;;;;:::i;937:51::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;937:51:15;-1:-1:-1;;;;;937:51:15;;:::i;1731:107:73:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:73;-1:-1:-1;;;;;1731:107:73;;:::i;5011:167:15:-;5082:4;5102:21;5116:6;5102:13;:21::i;:::-;5094:50;;;;;-1:-1:-1;;;5094:50:15;;;;;;;;;;;;-1:-1:-1;;;5094:50:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5157:16:15;;;;;;:8;:16;;;;;;;;5011:167;;;;:::o;3651:152::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;3727:21:15;;;;;;:10;:21;;;;;;3720:28;;-1:-1:-1;;3720:28:15;;;3759:39;3787:10;;3727:21;3759:39;;;3651:152;:::o;4271:111::-;358:27;;;-1:-1:-1;;;358:27:15;;;;;;;;;;;;4327:7;4349:28;;;:11;:28;;;;-1:-1:-1;;;;;4349:28:15;4271:111;:::o;1938:191::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;2062:17:15;;;;:11;:17;;;;;;;2037:53;;-1:-1:-1;;;;;2037:53:15;;;;2062:17;;;2074:4;;2037:53;;2062:17;2037:53;2096:17;;;;:11;:17;;;;;;:28;;-1:-1:-1;;;;;;2096:28:15;-1:-1:-1;;;;;2096:28:15;;;;;;;;;1938:191::o;4045:117::-;505:30;;;-1:-1:-1;;;505:30:15;;;;;;;;;;;;4104:7;4126:31;;;:11;:31;;;;-1:-1:-1;;;;;4126:31:15;4045:117;:::o;4386:107::-;430:25;;;-1:-1:-1;;;430:25:15;;;;;;;;;;;;4440:7;4462:26;;;:11;:26;;;;-1:-1:-1;;;;;4462:26:15;4386:107;:::o;3103:141::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;3172:14:15;:26;;-1:-1:-1;;;;;;3172:26:15;-1:-1:-1;;;;;3172:26:15;;;;;3204:35;;3172:26;;3204:12;:35::i;:::-;3103:141;:::o;1378:47::-;;;;;;;;;;;;;;;:::o;3396:251::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;3482:21:15;;3513:12;3482:21;;;:10;:21;;;;;:27;;;:43;;;;;;;;;3474:79;;;;;-1:-1:-1;;;3474:79:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3559:21:15;;;;;;:10;:21;;;;;:35;;3589:5;;3559:21;-1:-1:-1;;3559:35:15;;3589:5;3559:35;;;;;;;;;;;;-1:-1:-1;3605:37:15;;3631:10;;-1:-1:-1;;;;;3605:37:15;;;;;;;;3396:251;;:::o;3807:234::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;3888:35:15;;;;;;:23;:35;;;;;;;;:43;;:35;:43;3880:52;;;;;;3943:45;;3977:10;;-1:-1:-1;;;;;3943:45:15;;;;;;;;-1:-1:-1;;;;;4001:35:15;;;;;:23;:35;;;;;3994:42;;-1:-1:-1;;3994:42:15;;;3807:234::o;5182:196::-;5257:7;5276:32;5301:6;5276:24;:32::i;:::-;5272:75;;;-1:-1:-1;5325:15:15;;-1:-1:-1;;;;;5325:15:15;5318:22;;5272:75;-1:-1:-1;;5359:14:15;;-1:-1:-1;;;;;5359:14:15;;5182:196::o;4883:124::-;-1:-1:-1;;;;;4962:24:15;;;4943:4;4962:24;;;:16;:24;;;;;;;:40;;;4883:124::o;4731:148::-;654:23;;;-1:-1:-1;;;654:23:15;;;;;;;;;;;;4790:7;4822:24;;;:11;:24;;;;;;;;-1:-1:-1;;;721:24:15;;;;;;;;;;;;;4848:25;;;;;;;;-1:-1:-1;;;;;4822:24:15;;;;4848:25;4731:148;;:::o;992:51::-;;;;;;;;;;;;-1:-1:-1;;;;;992:51:15;;:::o;1423:137:73:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:73;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;;;;;1534:19:73;;;1423:137::o;4166:101:15:-;289:22;;;-1:-1:-1;;;289:22:15;;;;;;;;;;;;4217:7;4239:23;;;:11;:23;;;;-1:-1:-1;;;;;4239:23:15;4166:101;:::o;659:77:73:-;697:7;723:6;-1:-1:-1;;;;;723:6:73;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:73;1042:10;:20;;979:90::o;4614:113:15:-;583:28;;;-1:-1:-1;;;583:28:15;;;;;;;;;;;;4671:7;4693:29;;;:11;:29;;;;-1:-1:-1;;;;;4693:29:15;4614:113;:::o;826:29::-;;;-1:-1:-1;;;;;826:29:15;;:::o;5382:234::-;-1:-1:-1;;;;;5482:28:15;;;5450:4;5482:28;;;:16;:28;;;;;;5450:4;;5482:28;5524:25;5516:63;;;;;-1:-1:-1;;;5516:63:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5592:19:15;;;;;:8;:19;;;;;;;;;5382:234;-1:-1:-1;;5382:234:15:o;1186:55::-;;;;;;;;;;;;;;;:::o;859:30::-;;;-1:-1:-1;;;;;859:30:15;;:::o;3248:144::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;3318:15:15;:27;;-1:-1:-1;;;;;;3318:27:15;-1:-1:-1;;;;;3318:27:15;;;;;3351:36;;3318:27;;3351:12;:36::i;2842:257::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2920:24:15;;;;;;:71;;-1:-1:-1;;;;;;2948:35:15;;;;;;:23;:35;;;;;;;;:43;;:35;:43;;2920:71;2912:80;;;;;;3003:43;;3035:10;;-1:-1:-1;;;;;3003:43:15;;;;;;;;-1:-1:-1;;;;;3052:35:15;;;;;:23;:35;;;;;:42;;-1:-1:-1;;3052:42:15;3090:4;3052:42;;;2842:257::o;4497:113::-;793:28;;;-1:-1:-1;;;793:28:15;;;;;;;;;;;;4554:7;4576:29;;;:11;:29;;;;-1:-1:-1;;;;;4576:29:15;4497:113;:::o;1245:40::-;;;;;;;;;;;;;;;:::o;2352:486::-;863:9:73;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2477:26:15;;;;;;:57;;-1:-1:-1;;;;;;2507:27:15;;;;2477:57;2462:109;;;;;-1:-1:-1;;;2462:109:15;;;;;;;;;;;;-1:-1:-1;;;2462:109:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;2577:28:15;;;;;;;:16;:28;;;;;;;;:42;;;;;-1:-1:-1;;;;;;2577:42:15;;;;;;;;2625:29;;;:16;:29;;;;;:42;;;;;;;;;2673:20;;;:8;:20;;;;;:32;;;;;-1:-1:-1;;2673:32:15;;;;;;583:28;;-1:-1:-1;;;583:28:15;;;;;;;;;;;;2728:29;;:11;:29;;;;;;;-1:-1:-1;;;2711:75:15;;;;;;;;;;;2728:29;;;2711:63;;:75;;;;;2577:28;2711:75;;;;;;2577:28;2728:29;2711:75;;;5:2:-1;;;;30:1;27;20:12;5:2;2711:75:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2797:36:15;;-1:-1:-1;;;;;2797:36:15;;;;-1:-1:-1;2797:36:15;;;-1:-1:-1;2797:36:15;;;;;2352:486;;;:::o;937:51::-;;;;;;;;;;;;-1:-1:-1;;;;;937:51:15;;:::o;1731:107:73:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;-1:-1:-1;;;;;2055:22:73;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:73;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;;;;;2141:17:73;-1:-1:-1;;;;;2141:17:73;;;;;;;;;;1982:183::o",
  "source": "pragma solidity ^0.5.2;\n\nimport { Ownable } from \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport { IWithdrawManager } from \"../root/withdrawManager/IWithdrawManager.sol\";\n\ncontract Registry is Ownable {\n  // @todo hardcode constants\n  bytes32 constant private WETH_TOKEN = keccak256(\"wethToken\");\n  bytes32 constant private DEPOSIT_MANAGER = keccak256(\"depositManager\");\n  bytes32 constant private STAKE_MANAGER = keccak256(\"stakeManager\");\n  bytes32 constant private DELEGATION_MANAGER = keccak256(\"delegationManager\");\n  bytes32 constant private WITHDRAW_MANAGER = keccak256(\"withdrawManager\");\n  bytes32 constant private CHILD_CHAIN = keccak256(\"childChain\");\n  bytes32 constant private STATE_SENDER = keccak256(\"stateSender\");\n  bytes32 constant private SLASHING_MANAGER = keccak256(\"slashingManager\");\n\n  address public erc20Predicate;\n  address public erc721Predicate;\n\n  mapping(bytes32 => address) contractMap;\n  mapping(address => address) public rootToChildToken;\n  mapping(address => address) public childToRootToken;\n  // @todo we can think of one function from the registry which returns both (childToken,isERC721) if we are using it frequently together.\n  mapping(address => bool) public proofValidatorContracts;\n  mapping(address => bool) public isERC721;\n\n  enum Type { Invalid, ERC20, ERC721, Custom }\n  struct Predicate {\n    Type _type;\n  }\n  mapping(address => Predicate) public predicates;\n\n  event TokenMapped(address indexed rootToken, address indexed childToken);\n  event ProofValidatorAdded(address indexed validator, address indexed from);\n  event ProofValidatorRemoved(address indexed validator, address indexed from);\n  event PredicateAdded(address indexed predicate, address indexed from);\n  event PredicateRemoved(address indexed predicate, address indexed from);\n  event ContractMapUpdated(\n   bytes32 indexed key,\n   address indexed previousContract,\n   address indexed newContract\n  );\n\n  function updateContractMap(bytes32 _key, address _address)\n    external\n    onlyOwner\n  {\n    emit ContractMapUpdated(_key, contractMap[_key], _address);\n    contractMap[_key] = _address;\n  }\n\n  /**\n   * @dev Map root token to child token\n   * @param _rootToken Token address on the root chain\n   * @param _childToken Token address on the child chain\n   * @param _isERC721 Is the token being mapped ERC721\n   */\n  function mapToken(address _rootToken, address _childToken, bool _isERC721)\n    external\n    onlyOwner\n  {\n    require(\n      _rootToken != address(0x0) && _childToken != address(0x0),\n      \"INVALID_TOKEN_ADDRESS\"\n    );\n    rootToChildToken[_rootToken] = _childToken;\n    childToRootToken[_childToken] = _rootToken;\n    isERC721[_rootToken] = _isERC721;\n    IWithdrawManager(contractMap[WITHDRAW_MANAGER]).createExitQueue(_rootToken);\n    emit TokenMapped(_rootToken, _childToken);\n  }\n\n  function addProofValidator(address _validator) public onlyOwner {\n    require(_validator != address(0) && proofValidatorContracts[_validator] != true);\n    emit ProofValidatorAdded(_validator, msg.sender);\n    proofValidatorContracts[_validator] = true;\n  }\n\n  function addErc20Predicate(address predicate) public onlyOwner {\n    erc20Predicate = predicate;\n    addPredicate(predicate, Type.ERC20);\n  }\n\n  function addErc721Predicate(address predicate) public onlyOwner {\n    erc721Predicate = predicate;\n    addPredicate(predicate, Type.ERC721);\n  }\n\n  function addPredicate(address predicate, Type _type) public onlyOwner\n  {\n    require(predicates[predicate]._type == Type.Invalid, \"Predicate already added\");\n    predicates[predicate]._type = _type;\n    emit PredicateAdded(predicate, msg.sender);\n  }\n\n  function removePredicate(address predicate) public onlyOwner\n  {\n    delete predicates[predicate];\n    emit PredicateRemoved(predicate, msg.sender);\n  }\n\n  function removeProofValidator(address _validator) public onlyOwner {\n    require(proofValidatorContracts[_validator] == true);\n    emit ProofValidatorRemoved(_validator, msg.sender);\n    delete proofValidatorContracts[_validator];\n  }\n\n  function getDelegationManagerAddress() public view returns(address) {\n    return contractMap[DELEGATION_MANAGER];\n  }\n\n  function getWethTokenAddress() public view returns(address) {\n    return contractMap[WETH_TOKEN];\n  }\n\n  function getDepositManagerAddress() public view returns(address) {\n    return contractMap[DEPOSIT_MANAGER];\n  }\n\n  function getStakeManagerAddress() public view returns(address) {\n    return contractMap[STAKE_MANAGER];\n  }\n\n  function getSlashingManagerAddress() public view returns(address) {\n    return contractMap[SLASHING_MANAGER];\n  }\n\n  function getWithdrawManagerAddress() public view returns(address) {\n    return contractMap[WITHDRAW_MANAGER];\n  }\n\n  function getChildChainAndStateSender() public view returns(address, address) {\n    return (contractMap[CHILD_CHAIN], contractMap[STATE_SENDER]);\n  }\n\n  function isTokenMapped(address _token) public view returns (bool) {\n    return rootToChildToken[_token] != address(0x0);\n  }\n\n  function isTokenMappedAndIsErc721(address _token) public view returns (bool) {\n    require(isTokenMapped(_token), \"TOKEN_NOT_MAPPED\");\n    return isERC721[_token];\n  }\n\n  function isTokenMappedAndGetPredicate(address _token) public view returns (address) {\n    if (isTokenMappedAndIsErc721(_token)) {\n      return erc721Predicate;\n    }\n    return erc20Predicate;\n  }\n\n  function isChildTokenErc721(address childToken) public view returns(bool) {\n    address rootToken = childToRootToken[childToken];\n    require(rootToken != address(0x0), \"Child token is not mapped\");\n    return isERC721[rootToken];\n  }\n}\n"
}
